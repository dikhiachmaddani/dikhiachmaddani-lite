---
import data from '@/common/data/sites';

export type Props = {
    title?: string;
    isPost?: boolean;
    description?: string;
    keywords?: string[];
    thumbnail?: string;
    publishedAt?: string;
};

const {
    thumbnail = '',
    description = data.description,
    keywords = data.keywords,
    ...props
} = Astro.props as Props;

const { siteName, siteUrl } = data;
---

<title>{siteName} {props.title && `- ${props.title}`}</title>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width,initial-scale=1.0" />
<meta name="theme-color" content="#fff1f2" />
<link rel="canonical" href={`${siteUrl}${Astro.url.pathname}`} />
<meta name="description" content={description} />
<meta name="robots" content="index, follow" />
<meta name="author" content="Dikhi Achmad Dani" />
<meta name="copyright" content="Dikhi Achmad Dani 2025" />
<meta http-equiv="Content-Language" content="en" />
<meta property="og:locale" content="en_US" />
<meta name="keywords" content={keywords.join(',').toLowerCase()} />

<!-- favicon -->
<link rel="manifest" href="/manifest.json" crossorigin="use-credentials" />
<link rel="icon" type="image/svg" href="/assets/logo.svg" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={`${siteUrl}${Astro.url.pathname}`} />
<meta property="og:title" content={props.title || siteName} />
<meta property="og:description" content={description} />
<meta
    property="og:image"
    content={thumbnail
        ? thumbnail.toString()
        : 'https://avatars.githubusercontent.com/u/48237280?s=400&u=60e03c3e5f63afbb7cc8baa963ddf45306a1e9c4&v=4'}
/>

<!-- Twitter -->
<meta
    property="twitter:card"
    content={thumbnail ? 'summary_large_image' : 'summary'}
/>
<meta property="twitter:url" content={`${siteUrl}${Astro.url.pathname}`} />
<meta property="twitter:title" content={props.title || siteName} />
<meta property="twitter:description" content={description} />
{
    thumbnail !== '' && (
        <meta
            property="twitter:image"
            content={thumbnail ? thumbnail.toString() : ''}
        />
    )
}


